WReg reg17 1
WReg reg18 1
WReg reg19 1
FIFO_INPUT 1 0
FIFO_INPUT 2 1
STALL 1
DO_UNTIL 7 90 5 0 1        //**
WReg reg7 0
WReg reg8 0
SEARCH_RST
R_FIFO reg31
IF reg31 0 39        //** is lib func, jump to lib check
M_DIS reg31 reg48 0x18 15 15 7 15 0 0 0 0    //reg51 id,reg52 r/w
BIT_AND reg31 0x7ffffff reg0 1           //reg0 addr
IF reg52 0 34        //** reg52==0 store, jump to write rdt
RL reg0 0x2 reg0 1  //----------begin to read check
SL reg0 0x1 reg0 1  //reg0 rdt entry
LOAD reg31 reg18 reg0 2 1 cache0        //reg31 checkid (RDT)
IF reg31 0 7
SEARCH reg17 reg19 reg51 1
SEARCH_S reg30
CMP reg30 0x10 reg29 1 1
IF reg29 1 27         //** res len >16
C_CMP reg32 reg31 reg28 reg30
IF reg28 0 76         //**res not right
IF reg8 1 57           //**jump back to lib read
JUMP 7                 //** jump to beginning
WReg reg27 16
C_CMP reg32 reg31 reg28 reg27
IF reg28 0 31          //** jump to begin 
JUMP 25
MINUS reg30 0x10 reg30 1
SEARCH reg17 reg19 reg51 1 
JUMP 21             //** jump to read check
RL reg0 0x2 reg0 1  //----------begin to write rdt
SL reg0 0x1 reg0 1  //reg0 rdt entry
STORE reg51 reg18 reg0 2 1 cache0
IF reg7 1 68    //jumo to lib write
JUMP 7
R_FIFO_WIDE 0x1f  //reg56 write addr, reg57 read addr, reg58 len, reg59 retaddr, reg60 infocomplex
BIT_AND reg56 0x7ffffff reg0 1           //reg0 write addr
BIT_AND reg57 0x7ffffff reg1 1           //reg1 read addr
ADD reg0 0x0 reg11 1
M_DIS reg60 reg48 0x1f 15 0 0 0 0 0 0 0    //reg48 id,reg49 lib,reg50 call/ret,reg51 w,reg52 r
IF reg50 1 46          //** call
JUMP 47               //**
IF reg49 0 7           //** lib
ADD reg58 0x3 reg58 1    //** len ceil
RL reg58 0x2 reg2 1    //length ceil up to reg2
ADD reg1 0x0 reg0 1   //** read addr to reg0
ADD reg51 0x0 reg7 1   //** lib to reg51
ADD reg52 0x0 reg8 1   //** lib to reg51
ADD reg48 0x0 reg51 1   //** lib to reg51
IF reg50 0 74         //** not call, jump to ret check, 0 is call
IF reg52 0 64         //** no read, jump to write rdt
WReg reg9 0          
JUMP 15              //** ------------lib read jump to read check inst
SEARCH_RST
ADD reg9 0x1 reg9 1
CMP reg9 reg2 reg10 0 0
ADD reg1 0x4 reg1 1  //address + 4
ADD reg1 0x0 reg0 1  
IF reg10 1 64        //** read check done, jump to lib write rdt
JUMP 15              //** read check not done, go on jump to read check
IF reg7 0 7          //** no write, jump back to begin
WReg reg9 0          //-------------lib write
ADD reg11 0x0 reg0 1
JUMP 34              //** jump to write check
ADD reg9 0x1 reg9 1
CMP reg9 reg2 reg10 0 0
ADD reg11 0x4 reg11 1  //address + 4
ADD reg11 0x0 reg0 1  
IF reg10 1 7         //** write check done, jump back to begin
JUMP 34              //** jump to write check
ADD reg59 0x0 reg0 1  //-------------ret check
JUMP 15              //** 
ADD reg12 0x1 reg12 1 //DEBUg
JUMP 7
ADD reg31 0x0 reg13 1 
R_FIFO reg0
IF reg0 0 82
JUMP 79
R_FIFO_WIDE 0x0
JUMP 79