#include <stdio.h> 
#include <stdlib.h> 
#include <unistd.h> 

#define OLD_BP_PTR   __builtin_frame_address(0)
#define RET_ADDR_PTR ((void**)OLD_BP_PTR + 1)

void func_recur(int in){
	int next;
	next=in-1;
	if(next>0){
		func_recur(next);
	}
}

void func3(unsigned int* a,unsigned int* b,unsigned int c){
}

void func2(){
	
}

void func(int a, int b, int c){
	//asm(".word 0x0000008b");
	//unsigned long *sa=0x800200f0;
	//int i;
	//for(i=0;i<4;i++)
	//printf("in func, stack address value: %lx\n",*(sa-i));
	func2();
}

int main() 
{
	/*
	int a[1];
	int b[1];
	a[0]=1;
	b[0]=1;
	printf("a's address: %x, b's address: %x\n",a,b);
	asm(".word 0x28100e0b");
	func3(b,12,8);
	printf("%d\n",a[0]);
	printf("%d\n",b[0]);
	*/
	/*
	int a[2];
	int b[2];
	a[0]=1;
	a[1]=2;
	b[0]=3;
	b[1]=4;
	memset(b,12,12);
	printf("%d\n",a[0]);
	printf("%d\n",a[1]);
	printf("%d\n",b[0]);
	printf("%d\n",b[1]);
	memcpy(a,b,8);
	printf("%d\n",a[0]);
	printf("%d\n",a[1]);
	printf("%d\n",b[0]);
	printf("%d\n",b[1]);
	memset(b,34,8);
	printf("%d\n",a[0]);
	printf("%d\n",a[1]);
	printf("%d\n",b[0]);
	printf("%d\n",b[1]);
	 */
	
	int a[4];
	int b[4];
	int c[4];
	int d[4];
	void (*fp)(int,int,int);
	printf("a's address %x, b's address %x, c's address %x\n",a,b,c);
	int i,j;
	//for(j=0;j<1000;j++){
		for(i=0;i<4;i++)
		a[i]=0;
		for(i=0;i<4;i++)
		b[i]=0;
		for(i=0;i<4;i++)
		c[i]=0;
		for(i=0;i<4;i++)
		d[i]=0;
		
		for(i=0;i<7;i++)
		b[i]=i;
		
		memcpy(d,c,24);
		
		for(i=0;i<4;i++)
		printf("%d\n",a[i]);
		for(i=0;i<4;i++)
		printf("%d\n",b[i]);
		for(i=0;i<4;i++)
		printf("%d\n",c[i]);
		for(i=0;i<4;i++)
		printf("%d\n",d[i]);
		
		memset(d,0,24);
		
		//fp=func;
		func(0x12,0x34,0x45);
		//fp(0x12,0x34,0x45);
	//}
	//memcpy(a,b,3);
	printf("RET_ADDR_PTR is %x\n",(unsigned long)RET_ADDR_PTR);
	
    return 0;
}
